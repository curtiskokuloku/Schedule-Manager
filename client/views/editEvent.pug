doctype html
html(lang='en')
	head
		meta(charset='utf-8')
		meta(name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no')
		link(rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css' integrity='sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO' crossorigin='anonymous')
		script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js')
		script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js' integrity='sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49' crossorigin='anonymous')
		script(src='https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js' integrity='sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy' crossorigin='anonymous')
		title Edit Event
		style.
			.navbar .nav-link {
				color: white !important;
			}
			:root {
				--background-color: #ffffff;
				--text-color: #000000;
			}
			[data-theme='dark'] {
				--background-color: #333333;
				--text-color: #ffffff;
			}
			body {
				background-color: var(--background-color);
				color: var(--text-color);
				transition: background-color 0.5s ease, color 0.5s ease;
			}
	body
		nav.navbar.navbar-expanded.navbar-light.bg-dark.mb-5
			ul.nav.nav-pills
				li.nav-item
					a.nav-link(href='/') Home
				li.nav-item
					a.nav-link(href='/schedule') Schedule
				li.nav-item
					a.nav-link(href='/addEvent') Add Event
				li.nav-item.active
					a.nav-link.active(href='/logout') Logout
		br
		br
		.container.mb-5
			input#themeToggle(type='checkbox')
			label(for='themeToggle') Toggle Dark/Light Mode
			form#editEventForm(name='editEvent' method='post' action=`/schedule/edit/${event.event_id}`)
				.form-group
					label(for='nameInput') Event
					input#nameInput.form-control(type='text' name='event' pattern='[a-zA-Z0-9 ]+' title='Event must be alphanumeric' required='' value=event.event_event)
					small#eventHelp.form-text.text-muted Event name must be alphanumeric
				.form-group
					label(for='dayInput') Day of Week
					select#dayInput.form-control(name='day')
						option(disabled='' selected='') Select Option
						each day in ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
							option(value=day, selected=(event.event_day === day))= day
				.form-group
					label(for='startTimeInput') Start
					input#startTimeInput.form-control(type='time' name='start' required='' value=event.event_start)
				.form-group
					label(for='endTimeInput') End
					input#endTimeInput.form-control(type='time' name='end' required='' value=event.event_end)
				.form-group
					label(for='phoneInput') Phone
					input#phoneInput.form-control(type='text' name='phone' required='' value=event.event_phone)
				.form-group
					label(for='locationInput') Location
					input#locationInput.form-control(type='text' name='location' required='' value=event.event_location)
				.form-group
					label(for='extraInput') Extra Info
					input#extraInput.form-control(type='text' name='info' required='' value=event.event_info)
				.form-group
					label(for='urlInput') Enter URL for the Extra Info
					input#urlInput.form-control(type='url' name='url' required='' value=event.event_url)
				button#submitBtn.btn.btn-block.btn-primary(type='submit') Submit
		script.
			document.getElementById('submitBtn').addEventListener('submit', function (event) {
				event.preventDefault();
				const formData = new FormData(this);
				fetch(`/schedule/edit/${event.event_id}`, {
					method: 'POST',
					body: formData
				})
				.then(response => {
					if (!response.ok) {
						throw new Error('Failed to edit event');
					}
					return response.json();
				})
				.then(data => {
					window.location.replace('/schedule');
				})
				.catch(error => {
					console.error('Error:', error);
				});
			});
			document.addEventListener('DOMContentLoaded', function () {
				const themeToggle = document.getElementById('themeToggle');
				const currentTheme = localStorage.getItem('theme');
				if (currentTheme) {
					document.documentElement.setAttribute('data-theme', currentTheme);
					if (currentTheme === 'dark') {
						themeToggle.checked = true;
					}
				}
				themeToggle.addEventListener('change', function (event) {
					const eventId = event.target.getAttribute('data-event-id');
					if (this.checked) {
						document.documentElement.setAttribute('data-theme', 'dark');
						localStorage.setItem('theme', 'dark');
					} else {
						document.documentElement.setAttribute('data-theme', 'light');
						localStorage.setItem('theme', 'light');
					}
				});
			});
